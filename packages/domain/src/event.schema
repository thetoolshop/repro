import console.ConsoleMessage
import interaction.Interaction
import network.NetworkMessage
import performance.PerformanceEntry
import snapshot.Snapshot
import vdom.DOMPatch

type SourceEventType: enum {
   0: Snapshot
  10: DOMPatch
  20: Interaction
  30: Network
  40: Console
  99: CloseRecording
}

type SnapshotEvent: struct {
  type: SourceEventType.Snapshot
  time: uint32
  data: Snapshot
}

type DOMPatchEvent: struct {
  type: SourceEventType.DOMPatch
  time: uint32
  data: DOMPatch
}

type InteractionEvent: struct {
  type: SourceEventType.Interaction
  time: uint32
  data: Interaction
}

type NetworkEvent: struct {
  type: SourceEventType.Network
  time: uint32
  data: NetworkMessage
}

type ConsoleEvent: struct {
  type: SourceEventType.Console
  time: uint32
  data: ConsoleMessage
}

type PerformanceEvent: struct {
  type: SourceEventType.Performance
  time: uint32
  data: PerformanceEntry
}

type SourceEvent: union(type) {
  SnapshotEvent
  DOMPatchEvent
  InteractionEvent
  NetworkEvent
  ConsoleEvent
  PerformanceEvent
}
