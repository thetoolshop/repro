name: Build, test and deploy

on:
  push:
    branches:
      - "**"

jobs:
  run-affected:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Optional: Ensure PostgreSQL client (which includes pg_config) is installed
      # ubuntu-latest usually has it, but being explicit can be safer.
      - name: Install PostgreSQL client (if needed)
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      # Find the PostgreSQL bin directory and add it to the PATH
      - name: Add PostgreSQL bin directory to PATH
        run: |
          PG_BIN_DIR=$(pg_config --bindir)
          echo "Found PostgreSQL bin directory: $PG_BIN_DIR"
          echo "$PG_BIN_DIR" >> $GITHUB_PATH
        shell: bash # Explicitly use bash for command substitution

      # Verify that the command is now available
      - name: Verify initdb is in PATH
        run: |
          which initdb
          initdb --version # Example command using the newly available tool

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js with caching
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Get Nx cache
        uses: actions/cache@v3
        with:
          path: .nx
          key: ${{ runner.os }}-nx-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Get base and head for affected commands
        id: vars
        run: |
          git fetch origin main --depth=2
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "NX_BASE=HEAD~1" >> $GITHUB_ENV
            echo "NX_HEAD=HEAD" >> $GITHUB_ENV
          else
            echo "NX_BASE=origin/main" >> $GITHUB_ENV
            echo "NX_HEAD=${{ github.sha }}" >> $GITHUB_ENV
          fi

      - name: Build, lint and test affected packages
        run: pnpm nx affected -t build typecheck test

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build base Docker image
        uses: docker/build-push-action@v6
        with:
          cache-from: type=registry,ref=${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/repro-base:build-cache
          cache-to: type=registry,ref=${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/repro-base:build-cache
          tags: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT}}/repro-base:latest
          file: infra/base.dockerfile
          push: true

      - name: Build api-server Docker image
        uses: docker/build-push-action@v6
        with:
          target: prod
          cache-from: type=registry,ref=${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/api-server:build-cache
          cache-to: type=registry,ref=${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/api-server:build-cache
          tags: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT}}/api-server:latest
          file: infra/apps/api-server/Dockerfile
          push: true

