name: PR (open) - full build & deploy

on:
  pull_request:
    types:
      - open
      - reopen
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  build-api-server:
    runs-on: ubuntu-20.04

    steps: 
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Load NX build cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.nx-cache
          key: nx-build-cache

      - name: Load dependency cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/node_modules
          key: dependency-cache-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Setup toolchain
        uses: asdf-vm/actions/install@v2

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
          credentials_json: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}

      - name: Login to Artifact Registry
        uses: docker/login-action@v2
        with:
          registry: us-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Tag Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@v3
        with:
          context: .
          file: apps/api-server/Dockerfile
          push: true
          tags: |
            us-docker.pkg.dev/repro-383518/repro/api-server:${{ github.sha }}
            us-docker.pkg.dev/repro-383518/repro/api-server:pull-${{ github.event.number }}

    deploy-api-server:
      needs: build-api-server

      runs-on: ubuntu-20.04

      steps:
        - name: Create database branch
          id: database
          uses: neondatabase/create-branch-action@main
          with:
            project_id: ${{ secrets.NEON_PROJECT_ID }}
            parent_branch_id: ${{ secrets.NEON_MAIN_BRANCH_ID }}
            branch_name: pull-${{ github.event.number }}
            api_key: ${{ secrets.NEON_API_KEY }}

        - name: Authenticate with Google Cloud
          uses: google-github-actions/auth@v1
          with:
            service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
            credentials_json: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}

        - name: Deploy PR build to Cloud Run
          id: service
          uses: google-github-actions/deploy-cloudrun@v1
          with:
            service: pull-${{ github.event.number }}-api
            image: us-docker.pkg.dev/repro-383518/repro/api-server:pull-${{ github.event.number }}
            region: us-east1
            flags: '--allow-unauthenticated'
            env_vars: |
              NODE_ENV=production
              DB_HOST=${{ steps.database.outputs.host }}
              DB_PORT=${{ secrets.PROD_DB_PORT }}
              DB_USER=${{ secrets.PROD_DB_USER }}
              DB_PASSWORD=${{ secrets.PROD_DB_PASSWORD }}
              DB_DATABASE=${{ secrets.PROD_DB_DATABASE }}
              DB_USE_SSL=true
              AWS_S3_ENDPOINT=${{ secrets.AWS_S3_ENDPOINT }}
              AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
              AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
              AWS_REGION=${{ secrets.AWS_REGION }}
              RESOURCES_BUCKET_NAME=${{ secrets.PREVIEW_RESOURCES_BUCKET_NAME }}
              EMAIL_FROM_ADDRESS=noreply@repro.dev
              EMAIL_SMTP_HOST=localhost
              EMAIL_SMTP_PORT=1025
              EMAIL_SMTP_USE_CREDENTIALS=true
              EMAIL_SMTP_USER=0
              EMAIL_SMTP_PASS=0
              EMAIL_TEMPLATE_DIRECTORY=templates/email
              PADDLE_VENDOR_ID=0
              PADDLE_API_KEY=0
              PADDLE_SANDBOX=true
              PADDLE_TEAM_PLAN_MONTHLY=0
              PADDLE_TEAM_PLAN_ANNUAL=0

  build-workspace:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Load NX build cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.nx-cache
          key: nx-build-cache

      - name: Load dependency cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/node_modules
          key: dependency-cache-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Setup toolchain
        uses: asdf-vm/actions/install@v2

      - name: Install dependencies and prepare packages
        run: pnpm install

      - name: Build workspace client
        run: pnpm nx run @repro/client:build:main
        env:
          BUILD_ENV: production
          PADDLE_VENDOR_ID: ${{ secrets.PADDLE_VENDOR_ID }}
          MIXPANEL_API_URL: https://api-eu.mixpanel.com
          MIXPANEL_TOKEN: ${{ secrets.MIXPANEL_TOKEN }}
          REPRO_APP_URL: https://app-preview.repro.dev/pull/${{ github.event.number }}
          REPRO_API_URL: https://api-preview.repro.dev/pull/${{ github.event.number }}
          AUTH_STORAGE: local-storage
          STATS_LEVEL: error

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
          credentials_json: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Publish to cloud storage
        run: |
          gsutil -m \
            -h "Cache-Control: no-cache" \
            rsync -d -r apps/client/dist/main \
            gs://repro-workspace-builds/pull/${{ github.event.number }}

